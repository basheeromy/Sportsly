
services:
  app:
    restart: always
    build:
      context: .
      args:
        - DEV=true
    image: django_app
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - dev-static-data:/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=devtest
    depends_on:
      - db
      - redis
    networks:
      - default
      - network

  db:
    restart: always
    image: postgres:16beta2-alpine3.18
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devtest

  redis:
    restart: always
    image: redis:alpine3.18
    expose:
      - 6379

  rabbitmq:

    restart: always
    image: rabbitmq:3.12.4-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq_user
      - RABBITMQ_DEFAULT_PASS=rabbitmq_pass
      - RABBITMQ_DEFAULT_VHOST=rabbitmq_vhost

  celery_worker:
    restart: always
    build:
      context: .
      args:
        - DEV=true
    image: django_celery_worker
    command: sh -c "python manage.py migrate django_celery_results &&
                    celery -A app worker -l INFO"
    volumes:
      - ./app:/app
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=devtest
    depends_on:
      - db
      - rabbitmq
      - app

  celery_beat:
    restart: always
    build:
      context: .
      args:
        - DEV=true
    image: django_celery_beat
    command: >
      sh -c "python manage.py migrate &&
             python manage.py start_celery_beat"
    volumes:
      - ./app:/app
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=devtest
    depends_on:
      - rabbitmq
      - db
      - app

  flower:
    restart: always
    build:
      context: .
      args:
        - DEV=true
    image: django_celery_flower
    command: >
      sh -c "python manage.py start_flower"
    volumes:
      - ./app:/app
    ports:
      - 5557:5555
    depends_on:
      - celery_worker
      - rabbitmq
      - db

  # nextjs:
  #   restart: always
  #   image: next-js-frontend
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.frontend
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./nextjs:/app
  #   command: >
  #     sh -c "yarn dev"
  #   depends_on:
  #     - app

volumes:
  dev-db-data:
  dev-static-data:

networks:
  network:
    driver: bridge
    name: sportsly-internal-network
